[1mdiff --git a/.classpath b/.classpath[m
[1mindex 3bdb16a..10f24fb 100644[m
[1m--- a/.classpath[m
[1m+++ b/.classpath[m
[36m@@ -7,19 +7,19 @@[m
 			<attribute name="owner.project.facets" value="java"/>[m
 		</attributes>[m
 	</classpathentry>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.jst.j2ee.internal.web.container"/>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.jst.j2ee.internal.module.container"/>[m
[32m+[m	[32m<classpathentry kind="lib" path="D:/å¿«ç›˜/javaLib/junit-4.12-SNAPSHOT.jar"/>[m
 	<classpathentry kind="con" path="org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v7.0">[m
 		<attributes>[m
 			<attribute name="owner.project.facets" value="jst.web"/>[m
 		</attributes>[m
 	</classpathentry>[m
[31m-	<classpathentry kind="con" path="org.eclipse.jst.j2ee.internal.web.container"/>[m
[31m-	<classpathentry kind="con" path="org.eclipse.jst.j2ee.internal.module.container"/>[m
 	<classpathentry kind="con" path="com.genuitec.runtime.library/com.genuitec.jstl_1.2.1">[m
 		<attributes>[m
 			<attribute name="org.eclipse.jst.component.dependency" value="WEB-INF/lib"/>[m
 			<attribute name="owner.project.facets" value="jst.web.jstl"/>[m
 		</attributes>[m
 	</classpathentry>[m
[31m-	<classpathentry kind="lib" path="D:/å¿«ç›˜/javaLib/junit-4.12-SNAPSHOT.jar"/>[m
 	<classpathentry kind="output" path="WebRoot/WEB-INF/classes"/>[m
 </classpath>[m
[1mdiff --git a/.settings/com.genuitec.runtime.libraries.xml b/.settings/com.genuitec.runtime.libraries.xml[m
[1mindex 6f87908..d22c0c7 100644[m
[1m--- a/.settings/com.genuitec.runtime.libraries.xml[m
[1m+++ b/.settings/com.genuitec.runtime.libraries.xml[m
[36m@@ -1,6 +1,6 @@[m
 <?xml version="1.0" encoding="UTF-8" standalone="no"?>[m
 <project>[m
[31m-  <add-on id="hibernate.emanager"/>[m
   <add-on id="spring.web"/>[m
[32m+[m[32m  <add-on id="hibernate.emanager"/>[m
   <disabled-container path="com.genuitec.runtime.library/com.genuitec.hibernate_3.3"/>[m
 </project>[m
[1mdiff --git a/.settings/org.eclipse.wst.common.component b/.settings/org.eclipse.wst.common.component[m
[1mindex d84e7f2..3f117ff 100644[m
[1m--- a/.settings/org.eclipse.wst.common.component[m
[1m+++ b/.settings/org.eclipse.wst.common.component[m
[36m@@ -1,10 +1,10 @@[m
 <?xml version="1.0" encoding="UTF-8"?>[m
 <project-modules id="moduleCoreId" project-version="1.5.0">[m
[31m-    <wb-module deploy-name="Spring_2300_Registration_1">[m
[32m+[m[32m    <wb-module deploy-name="Spring_2500_Registration_3">[m
         <wb-resource deploy-path="/" source-path="/WebRoot" tag="defaultRootSource"/>[m
         <wb-resource deploy-path="/WEB-INF/classes" source-path="/src"/>[m
         <wb-resource deploy-path="/WEB-INF/classes" source-path="/test"/>[m
[31m-        <property name="context-root" value="Spring_2300_Registration_1"/>[m
         <property name="java-output-path" value="/Spring_2300_Registration_1/WebRoot/WEB-INF/classes"/>[m
[32m+[m[32m        <property name="context-root" value="/Spring_2500_Registration_3"/>[m
     </wb-module>[m
 </project-modules>[m
[1mdiff --git a/WebRoot/WEB-INF/classes/applicationContext.xml b/WebRoot/WEB-INF/classes/applicationContext.xml[m
[1mindex e4030e3..f4a67b3 100644[m
[1m--- a/WebRoot/WEB-INF/classes/applicationContext.xml[m
[1m+++ b/WebRoot/WEB-INF/classes/applicationContext.xml[m
[36m@@ -52,7 +52,7 @@[m
   	[m
   	<tx:advice id="txAdvice" transaction-manager="txManager">[m
   		<tx:attributes>[m
[31m-  			<tx:method name="query*" read-only="true"/>[m
[32m+[m[41m  [m			[32m<tx:method name="query*, exists" read-only="true"/>[m
   			<tx:method name="add*"/>[m
   		</tx:attributes>[m
   	</tx:advice>[m
[1mdiff --git a/src/action/UserAction.java b/src/action/UserAction.java[m
[1mindex 08ee676..29d9d0d 100644[m
[1m--- a/src/action/UserAction.java[m
[1m+++ b/src/action/UserAction.java[m
[36m@@ -2,20 +2,24 @@[m [mpackage action;[m
 [m
 import javax.annotation.Resource;[m
 [m
[32m+[m[32mimport org.springframework.context.annotation.Scope;[m
 import org.springframework.stereotype.Component;[m
 [m
 import po.WebUser;[m
 import service.UserService;[m
[31m-import service.impl.UserServiceImpl;[m
 [m
 import com.opensymphony.xwork2.ActionSupport;[m
 [m
[31m-@Component[m
[32m+[m[32m@Scope("prototype")[m
[32m+[m[32m@Component("userAction")[m
 public class UserAction extends ActionSupport {[m
 	private String username;[m
 	private String psw;[m
 	private String psw2;[m
 	[m
[32m+[m	[32mprivate WebUser user;[m
[32m+[m	[32mprivate int id;[m
[32m+[m[41m	[m
 	private UserService userService;[m
 	[m
 	public String register(){[m
[36m@@ -30,6 +34,11 @@[m [mpublic class UserAction extends ActionSupport {[m
 		userService.add(user);[m
 		return SUCCESS;[m
 	}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic String load() {[m
[32m+[m		[32muser = userService.loadById(id);[m
[32m+[m		[32mreturn "";[m
[32m+[m	[32m}[m
 [m
 	public String getUsername() {[m
 		return username;[m
[36m@@ -63,4 +72,20 @@[m [mpublic class UserAction extends ActionSupport {[m
 	public void setUserService(UserService userService) {[m
 		this.userService = userService;[m
 	}[m
[32m+[m
[32m+[m	[32mpublic WebUser getUser() {[m
[32m+[m		[32mreturn user;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setUser(WebUser user) {[m
[32m+[m		[32mthis.user = user;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic int getId() {[m
[32m+[m		[32mreturn id;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void setId(int id) {[m
[32m+[m		[32mthis.id = id;[m
[32m+[m	[32m}[m
 }[m
[1mdiff --git a/src/applicationContext.xml b/src/applicationContext.xml[m
[1mindex e4030e3..f4a67b3 100644[m
[1m--- a/src/applicationContext.xml[m
[1m+++ b/src/applicationContext.xml[m
[36m@@ -52,7 +52,7 @@[m
   	[m
   	<tx:advice id="txAdvice" transaction-manager="txManager">[m
   		<tx:attributes>[m
[31m-  			<tx:method name="query*" read-only="true"/>[m
[32m+[m[41m  [m			[32m<tx:method name="query*, exists" read-only="true"/>[m
   			<tx:method name="add*"/>[m
   		</tx:attributes>[m
   	</tx:advice>[m
[1mdiff --git a/src/dao/UserDAO.java b/src/dao/UserDAO.java[m
[1mindex 55e4090..2d9062a 100644[m
[1m--- a/src/dao/UserDAO.java[m
[1m+++ b/src/dao/UserDAO.java[m
[36m@@ -6,4 +6,5 @@[m [mpublic interface UserDAO {[m
 	[m
 	public WebUser queryByName(String name);[m
 	public void save(WebUser user);[m
[32m+[m	[32mpublic WebUser loadById(int id);[m
 }[m
[1mdiff --git a/src/dao/impl/UserDAOImpl.java b/src/dao/impl/UserDAOImpl.java[m
[1mindex 23551e3..19fc1cc 100644[m
[1m--- a/src/dao/impl/UserDAOImpl.java[m
[1m+++ b/src/dao/impl/UserDAOImpl.java[m
[36m@@ -14,6 +14,7 @@[m [mpublic class UserDAOImpl extends SuperDAO implements UserDAO {[m
 	public WebUser queryByName(String name) {[m
 		WebUser user = null;[m
 			String hql = " from WebUser user where user.username = :username";[m
[32m+[m			[32m@SuppressWarnings("unchecked")[m
 			List<WebUser> users = getHibernateTemplate().findByNamedParam(hql, "username", name);[m
 			if (null != users) {[m
 				user = users.get(0);[m
[36m@@ -26,4 +27,9 @@[m [mpublic class UserDAOImpl extends SuperDAO implements UserDAO {[m
 	public void save(WebUser user) {[m
 		getHibernateTemplate().save(user);[m
 	}[m
[32m+[m[41m	[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic WebUser loadById(int id) {[m
[32m+[m		[32mreturn (WebUser)getHibernateTemplate().load(WebUser.class, id);[m
[32m+[m	[32m}[m
 }[m
[1mdiff --git a/src/service/UserService.java b/src/service/UserService.java[m
[1mindex 734bb58..f1a4b3a 100644[m
[1m--- a/src/service/UserService.java[m
[1m+++ b/src/service/UserService.java[m
[36m@@ -7,4 +7,5 @@[m [mimport dao.impl.UserDAOImpl;[m
 public interface UserService {[m
 	public boolean exists(WebUser user);[m
 	public void add(WebUser user);[m
[32m+[m	[32mpublic WebUser loadById(int id);[m
 }[m
[1mdiff --git a/src/service/impl/UserServiceImpl.java b/src/service/impl/UserServiceImpl.java[m
[1mindex a7e33c2..ac045ac 100644[m
[1m--- a/src/service/impl/UserServiceImpl.java[m
[1m+++ b/src/service/impl/UserServiceImpl.java[m
[36m@@ -7,7 +7,6 @@[m [mimport org.springframework.stereotype.Component;[m
 import po.WebUser;[m
 import service.UserService;[m
 import dao.UserDAO;[m
[31m-import dao.impl.UserDAOImpl;[m
 [m
 @Component("userService")[m
 public class UserServiceImpl implements UserService {[m
[36m@@ -30,4 +29,9 @@[m [mpublic class UserServiceImpl implements UserService {[m
 	public void setUserDAO(UserDAO userDAO) {[m
 		this.userDAO = userDAO;[m
 	}[m
[32m+[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic WebUser loadById(int id) {[m
[32m+[m		[32mreturn userDAO.loadById(id);[m
[32m+[m	[32m}[m
 }[m
[1mdiff --git a/src/test.hql b/src/test.hql[m
[1mdeleted file mode 100644[m
[1mindex 5fe7c81..0000000[m
[1m--- a/src/test.hql[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m- from WebUser user where user.username = 'user1'[m
\ No newline at end of file[m
[1mdiff --git a/test/action/UserActionTest.java b/test/action/UserActionTest.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f239553[m
[1m--- /dev/null[m
[1m+++ b/test/action/UserActionTest.java[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mpackage action;[m
[32m+[m
[32m+[m[32mimport static org.junit.Assert.*;[m
[32m+[m
[32m+[m[32mimport org.junit.Before;[m
[32m+[m[32mimport org.junit.Test;[m
[32m+[m[32mimport org.springframework.context.ApplicationContext;[m
[32m+[m[32mimport org.springframework.context.support.ClassPathXmlApplicationContext;[m
[32m+[m
[32m+[m[32mpublic class UserActionTest {[m
[32m+[m	[32mApplicationContext ac = null;[m
[32m+[m[41m	[m
[32m+[m	[32m@Before[m
[32m+[m	[32mpublic void init() {[m
[32m+[m		[32mac = new ClassPathXmlApplicationContext("applicationContext.xml");[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@Test[m
[32m+[m	[32mpublic void testRegister() {[m
[32m+[m		[32mUserAction userAction = (UserAction)ac.getBean("userAction");[m
[32m+[m[41m		[m
[32m+[m		[32muserAction.setUsername("testname2");[m
[32m+[m		[32muserAction.setPsw("testPsw2");[m
[32m+[m		[32muserAction.setPsw2("testPsw2");[m
[32m+[m		[32mString result = userAction.register();[m
[32m+[m[41m		[m
[32m+[m		[32massertEquals("success", result);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/test/test.hql b/test/test.hql[m
[1mnew file mode 100644[m
[1mindex 0000000..5fe7c81[m
[1m--- /dev/null[m
[1m+++ b/test/test.hql[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m from WebUser user where user.username = 'user1'[m
\ No newline at end of file[m
warning: LF will be replaced by CRLF in WebRoot/WEB-INF/classes/applicationContext.xml.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in src/applicationContext.xml.
The file will have its original line endings in your working directory.

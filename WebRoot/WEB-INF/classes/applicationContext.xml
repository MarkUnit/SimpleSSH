<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<context:annotation-config />
	<context:component-scan base-package="dao, service, action, po"></context:component-scan>
	<aop:aspectj-autoproxy />

	<bean id="mappings" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- typed as a java.util.Properties -->
		<property name="properties">
			<value>
				jdbc.driver.className=com.mysql.jdbc.Driver
				jdbc.url=jdbc:mysql://localhost:3306/spring
				jdbc.username=root
				jdbc.password=mysql
			</value>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driver.className}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />
		
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect"> org.hibernate.dialect.MySQLDialect </prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	    <!-- <property name="mappingDirectoryLocations">
	    	<list>
	    		<value>WEB-INF\classes\po</value>
	    	</list>
	    </property> -->
	    <property name="mappingLocations"> 
		    <value>classpath:**/po/*.hbm.xml </value> 
		</property>
  	</bean>
  	
  	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  		<property name="sessionFactory" ref="sessionFactory"></property>
  	</bean>
  	
  	<tx:annotation-driven transaction-manager="transactionManager"/>
  	<tx:advice id="txAdvice" transaction-manager="transactionManager">
  		<tx:attributes>
  			<tx:method name="query*, exists" read-only="true"/>
  			<tx:method name="add*"/>
  		</tx:attributes>
  	</tx:advice>
  	
  	<aop:config>
  		<aop:pointcut expression="execution(public * service..*.*(..))" id="servicePointcut"/>
  		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"/>
  	</aop:config>
  	
  	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
  		<property name="sessionFactory" ref="sessionFactory"></property>
  	</bean>
  	
  	
  	
  	<mvc:annotation-driven />
  	<!-- this bean with the well known name generates view names for us -->
	<bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator" />

	<!-- maps request URLs to Controller names -->
	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<mvc:view-controller path="/" view-name="register"/>
	<mvc:resources mapping="/resources/**" location="/public-resources/" />
	<mvc:default-servlet-handler/>
	
	
</beans>